-- This project was written using SQLite Studio and utilized data from a dataset called "chinook", which represents a  digital media store and includes tables for artists, albums, media tracks, invoices, and customers.

-- The following SQL was written to answer specific questions about the dataset content.


-- Show Customers (their full names, customer ID, and country) who are not in the US.
SELECT FirstName,
       LastName,
       CustomerId,
       Country
  FROM customers
 WHERE Country NOT LIKE 'USA';


-- Show only the Customers from Brazil.
SELECT *
  FROM customers
 WHERE Country = 'Brazil';


-- Find the Invoices of customers who are from Brazil, including customer's full name, Invoice ID, Date of the invoice, and billing country.
SELECT InvoiceId,
       FirstName,
       LastName,
       InvoiceDate,
       BillingCountry
  FROM customers
       LEFT JOIN
       invoices ON customers.CustomerID = invoices.CustomerId
 WHERE BillingCountry = 'Brazil';


-- Show the Employees who are Sales Agents.
SELECT *
  FROM employees
 WHERE Title = 'Sales Support Agent';


-- Find a distinct list of billing countries from the Invoice table.
SELECT DISTINCT BillingCountry
  FROM invoices;


-- Provide a query that shows the invoices associated with each sales agent. The resulting table should include the Sales Agent's full name.
SELECT EmployeeId,
       FirstName,
       LastName,
       InvoiceId,
       InvoiceDate
  FROM employees
       JOIN
       customers ON customers.SupportRepId = employees.EmployeeID
       JOIN
       invoices ON customers.CustomerId = invoices.CustomerId;


-- Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.
SELECT employees.FirstName Agent_FirstName,
       employees.LastName Agent_LastName,
       customers.FirstName Cust_FirstName,
       customers.LastName Cust_LastName,
       invoices.BillingCountry,
       invoices.Total
  FROM employees
       JOIN
       customers ON employees.EmployeeId = customers.SupportRepId
       JOIN
       invoices ON customers.customerId = invoices.CustomerId;
       

-- How many Invoices were there in 2009?
SELECT COUNT (*) AS 'Number of Invoices'
  FROM invoices
 WHERE InvoiceDate BETWEEN [2009-01-01] AND [2009-12-31];
 

-- What are the total sales for 2009?
SELECT sum(Total) AS TotalSales
  FROM invoices
 WHERE InvoiceDate BETWEEN [2009-01-01] AND [2009-12-31];
 

-- Write a query that includes the purchased track name with each invoice line ID.
SELECT invoice_items.InvoiceId,
       tracks.Name
  FROM invoice_items
       JOIN
       tracks ON invoice_items.TrackId = tracks.TrackId;


-- Write a query that includes the purchased track name AND artist name with each invoice line ID.
SELECT invoice_items.InvoiceId,
       tracks.Name,
       artists.Name
  FROM invoice_items
       JOIN
       tracks ON invoice_items.TrackId = tracks.TrackId
       JOIN
       albums ON tracks.AlbumId = albums.AlbumId
       JOIN
       artists ON albums.ArtistId = artists.ArtistId;
       

-- Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre.
SELECT tracks.Name AS 'Track Name',
       albums.Title AS 'Album Title',
       media_types.Name AS 'Media Type',
       genres.Name Genre
  FROM tracks
       JOIN
       albums ON tracks.AlbumId = albums.AlbumId
       JOIN
       genres ON tracks.MediaTypeId = genres.GenreId
       JOIN
       media_types ON tracks.MediaTypeId = media_types.MediaTypeId;
       

-- Show the total sales made by each sales agent.
SELECT employees.FirstName,
       employees.LastName,
       ROUND(sum(invoices.Total)) AS 'Total Sales'
  FROM employees
       JOIN
       customers ON employees.EmployeeId = customers.SupportRepId
       JOIN
       invoices ON customers.CustomerId = invoices.CustomerId
GROUP BY employees.FirstName;


-- Which sales agent made the most dollars in sales in 2009?
SELECT employees.FirstName,
       employees.LastName,
       ROUND(sum(invoices.Total) ) AS [Total Sales]
  FROM employees
       JOIN
       customers ON employees.EmployeeId = customers.SupportRepId
       JOIN
       invoices ON customers.CustomerId = invoices.CustomerId
 GROUP BY employees.FirstName
 ORDER BY ROUND(sum(invoices.Total) ) DESC
 LIMIT 1;

